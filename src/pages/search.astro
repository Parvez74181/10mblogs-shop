---
import Layout from "../layouts/Layout.astro";
import { Image } from "astro:assets";
import notFound from "../../public/404-svg.svg";
import Button from "../components/Button.astro";
import Card from "../components/Card.astro";
import axios from "axios";
const URI = import.meta.env.URI;
const search = Astro.url.searchParams.get("search");

let products;
let productsCount;
const page = Number(Astro.url.searchParams.get("page")) || 1;
const pageSize = 20;

try {
  let res = await axios(`${URI}?search=${search}&page=${page}`);
  products = res.data.data;
  productsCount = res.data.totalCount;
} catch (e) {
  console.log(e);
}

const pageCount = Math.ceil(Number(productsCount) / pageSize);

let paginationItems: String[] = [];

// insert prev icon
paginationItems.push(
  `<li ><a class="cursor-pointer flex justify-center items-center w-9 h-9 ${
    page <= 1 && "opacity-50 cursor-default select-none"
  }" id='pagination-item' ${
    page > 1 && `href=/search?search=${search}&page=${page - 1}`
  }>
    <img  src="/dropdown-icon.png" title="prev" height={20} width={20} loading='lazy' class="rotate-90" decoding='async' alt="prev button"/></a></li>`
);

for (let i = page - 3; i <= page + 3; i++) {
  // if i is negative number then continue the for loop
  if (i < 1) continue;
  else if (i > pageCount) break; // if i is greater then pageCount then break the for loop

  paginationItems.push(
    ` <li ><a class="cursor-pointer flex justify-center items-center w-9 h-9 rounded-full hover:bg-blue-500 hover:text-white hover:shadow-lg ${
      i === page && "bg-blue-500 text-white current"
    }" id='pagination-item' href='/search?search=${search}&page=${i}'>${i}</a></li>`
  );
}

// insert next icon
paginationItems.push(
  `<li ><a class="cursor-pointer flex justify-center items-center w-9 h-9  ${
    page >= pageCount && "opacity-50 cursor-default select-none"
  }" id='pagination-item' ${
    page < pageCount && `href=/search?search=${search}&page=${page + 1}`
  }> <img  src="/dropdown-icon.png" title="prev" height={20} width={20} loading='lazy' class="-rotate-90" decoding='async' alt="prev button"/></a></li>`
);
---

<Layout title={`${search} | Find your desire products`}>
  <section class="min-h-screen mx-auto mb-10 w-[80%]">
    {
      products?.length > 0 ? (
        <>
          <p
            class="mt-10 text-gray-500 text-md text-center"
            data-aos="zoom-in-up"
            data-aos-duration="1000"
          >
            Showing results based on {`"${search}"`}
          </p>
          <div class="flex justify-center items-center flex-wrap mt-10 gap-8 w-[90%]  mx-auto">
            {products?.map((product: any) => (
              <Card postData={product} />
            ))}
          </div>

          {/*Pagination */}
          <div
            id="pagination"
            class="pagination w-full flex justify-center items-center px-20 my-10"
          >
            <ul
              class="flex gap-5 items-center pagination-ul"
              set:html={paginationItems}
            />
          </div>
        </>
      ) : (
        <>
          <div
            class="mt-10 md:mt-20 text-gray-500 text-md text-center"
            data-aos="zoom-in-up"
            data-aos-duration="1000"
          >
            Nothing found about {`"${search}"`}
            <Image
              src={notFound}
              class=" rounded-md object-contain mx-auto my-10"
              width={300}
              height={226}
              alt="404-blog-not-found"
            />
            <a
              href="/"
              class="rounded-md relative mx-auto inline-flex justify-center items-center drop-shadow-xl"
            >
              <Button text={"Back to home"} />
            </a>
          </div>
        </>
      )
    }
  </section>
</Layout>
