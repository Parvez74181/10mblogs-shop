---
import { Image } from "astro:assets";
import Layout from "../layouts/Layout.astro";
import axios from "axios";
import Card from "../components/Card.astro";
const URI = import.meta.env.URI;
const { slug } = Astro.params;

let product: any;
let products: any;

try {
  let resProduct = await axios(`${URI}?slug=${slug}`);
  let resProducts = await axios(URI);

  product = resProduct.data.data[0];
  products = resProducts.data.data;
} catch (e) {
  console.log(e);
}
---

<Layout
  title={product?.title}
  description={product?.metaDescription}
  image={product?.thumbnail}
  tags={product?.postTags}
  createdAt={product?.createdAt}
>
  <main
    id="slug-main"
    class="slug-main min-h-screen w-[90%] md:w-[80%] mx-auto bg-white"
  >
    <div
      class="w-full my-5 flex flex-col md:flex-row justify-between md:justify-center items-center p-5 rounded-md gap-5"
    >
      <!-- img container -->
      <div class="w-full md:w-1/3">
        <Image
          src={product?.thumbnail}
          alt={product?.title}
          class="w-full rounded object-contain mb-5"
          height={350}
          format="webp"
          width={450}
        />
        {
          product?.blog && (
            <a href={product?.blog} class=" text-blue-600 hover:underline">
              <div class="blog-link flex justify-center items-center cursor-pointer">
                Read full review about this product
              </div>
            </a>
          )
        }
      </div>

      <div class="w-full md:w-1/2">
        <h1 class="text-xl font-bold">
          {product?.title}
        </h1>

        <div class="buy-links flex gap-10 flex-wrap my-10">
          {
            product?.amazon && (
              <a href={product?.amazon}>
                <div class="amazon-link flex justify-center items-center bg-yellow-300 hover:bg-yellow-400 font-bold cursor-pointer">
                  Buy from Amazon
                </div>
              </a>
            )
          }
          {
            product?.flipkart && (
              <a href={product?.flipkart}>
                <div class="flipkart-link flex justify-center items-center bg-yellow-300 hover:bg-yellow-400 font-bold cursor-pointer">
                  Buy from Flipkart
                </div>
              </a>
            )
          }
          {
            product?.daraz && (
              <a href={product?.daraz}>
                <div class="daraz-link flex justify-center items-center bg-yellow-300 hover:bg-yellow-400 font-bold cursor-pointer">
                  Buy from Daraz
                </div>
              </a>
            )
          }
          {
            product?.ebay && (
              <a href={product?.ebay}>
                <div class="ebay-link flex justify-center items-center bg-yellow-300 hover:bg-yellow-400 font-bold cursor-pointer">
                  Buy from eBay
                </div>
              </a>
            )
          }
        </div>
      </div>
    </div>

    <!-- recent products -->
    <div>
      <h1
        id="all-post-title"
        class="shadow-text ms-2 md:ms-20 text-5xl md:text-9xl max-h-[70px]"
      >
        Recent Products
      </h1>
      <div
        class="content flex flex-wrap justify-center items-center my-10 mx-auto gap-4 md:gap-8"
      >
        {products?.map((post: any) => <Card postData={post} />)}
      </div>
    </div>
  </main>
</Layout>

<style lang="scss">
  .shadow-text {
    color: #eeeeee;
    font-family: Gothic A1 !important;
    font-style: normal;
    font-weight: 800;
    line-height: normal;
  }
  .buy-links {
    div {
      width: 200px;
      height: 50px;
      border-radius: 30px;
    }
  }
  .slug-main {
    font-family: "Gothic A1", sans-serif !important;
  }

  .category,
  .categories-heading {
    color: #eeeeee;
    font-family: "Gothic A1" !important;
    font-style: normal;
    font-weight: 800;
    line-height: normal;
  }

  .categories {
    li {
      list-style: none;
      padding-top: 10px;
      padding-left: 10px;
      padding-bottom: 4px;
      border-bottom: 1px solid #e0e0e0;
      position: relative;
      &::before {
        content: "";
        position: absolute;
        top: 50%;
        left: 0;
        width: 4px;
        height: 4px;
        border-radius: 50%;
        background: #e0e0e0;
      }
    }
  }
</style>

<script defer>
const searchInputBox = document.querySelector("#search-input");
const searchIconBox = document.querySelector("#search-icon");
const shareIcon = document.querySelector("#share-icon");

searchInputBox.addEventListener("keyup", (e) => {
  searchHandler(e);
});
searchIconBox.addEventListener("click", (e) => {
  searchHandler(e);
});

//   searchHandler
const searchHandler = (e) => {
  if (e.keyCode === 13 || e.key === "Enter") {
    let searchText = e.target.value.trim().toLowerCase();
    if (searchText) router.push(`/product/search/${searchText}`);
  } else if (e.type === "click") {
    let parentNodeItem = e.target.parentNode.parentNode;
    let searchInput = parentNodeItem.querySelector("#search");

    searchInput = searchInput?.value?.trim().toLowerCase();
    if (searchInput) router.push(`/product/search/${searchInput}`);
  }
};

const shareBtn = async (title, text) => {
  const shareData = {
    title,
    text,
    url: location.href,
  };
  // if navigator.share do support then share with navigator.share else copy the input text url and give a msg 'link copied!'. afater 2s remove the msg and the selection of url container
  console.log(navigator.share);

  if (typeof navigator !== "undefined" && navigator.share)
    await navigator.share(shareData);
  else {
    let txt = document.querySelector(".share-box .link-copy-txt");
    let urlInput = document.querySelector("#url-input");

    urlInput.select();
    document.execCommand("copy");
    txt.innerHTML = "Link Copied!";

    setTimeout(() => {
      txt.innerHTML = "";
      urlInput.setSelectionRange(0, 0); // this means deselect
    }, 2000);
  }
};

shareIcon.addEventListener("click", (e) => {
  shareBtn(e.target.dataset.title, e.target.dataset.desc);
});
</script>
